// Code generated by protoc-gen-go.
// source: signature.proto
// DO NOT EDIT!

/*
Package signature is a generated protocol buffer package.

It is generated from these files:
	signature.proto

It has these top-level messages:
	Section
	Signature
*/
package signature

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SectionType int32

const (
	SectionType_ZIP    SectionType = 0
	SectionType_GUNZIP SectionType = 1
)

var SectionType_name = map[int32]string{
	0: "ZIP",
	1: "GUNZIP",
}
var SectionType_value = map[string]int32{
	"ZIP":    0,
	"GUNZIP": 1,
}

func (x SectionType) String() string {
	return proto.EnumName(SectionType_name, int32(x))
}
func (SectionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Section struct {
	Size              int64       `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
	PayloadPrefixMask string      `protobuf:"bytes,2,opt,name=payloadPrefixMask" json:"payloadPrefixMask,omitempty"`
	Checksum          []byte      `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Type              SectionType `protobuf:"varint,4,opt,name=type,enum=signature.SectionType" json:"type,omitempty"`
}

func (m *Section) Reset()                    { *m = Section{} }
func (m *Section) String() string            { return proto.CompactTextString(m) }
func (*Section) ProtoMessage()               {}
func (*Section) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Section) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Section) GetPayloadPrefixMask() string {
	if m != nil {
		return m.PayloadPrefixMask
	}
	return ""
}

func (m *Section) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *Section) GetType() SectionType {
	if m != nil {
		return m.Type
	}
	return SectionType_ZIP
}

type Signature struct {
	BinSize          int64      `protobuf:"varint,1,opt,name=binSize" json:"binSize,omitempty"`
	BinChecksum      []byte     `protobuf:"bytes,2,opt,name=binChecksum,proto3" json:"binChecksum,omitempty"`
	TotalSectionSize int64      `protobuf:"varint,3,opt,name=totalSectionSize" json:"totalSectionSize,omitempty"`
	Ts               int64      `protobuf:"varint,4,opt,name=ts" json:"ts,omitempty"`
	Section          []*Section `protobuf:"bytes,5,rep,name=section" json:"section,omitempty"`
}

func (m *Signature) Reset()                    { *m = Signature{} }
func (m *Signature) String() string            { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()               {}
func (*Signature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Signature) GetBinSize() int64 {
	if m != nil {
		return m.BinSize
	}
	return 0
}

func (m *Signature) GetBinChecksum() []byte {
	if m != nil {
		return m.BinChecksum
	}
	return nil
}

func (m *Signature) GetTotalSectionSize() int64 {
	if m != nil {
		return m.TotalSectionSize
	}
	return 0
}

func (m *Signature) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Signature) GetSection() []*Section {
	if m != nil {
		return m.Section
	}
	return nil
}

func init() {
	proto.RegisterType((*Section)(nil), "signature.Section")
	proto.RegisterType((*Signature)(nil), "signature.Signature")
	proto.RegisterEnum("signature.SectionType", SectionType_name, SectionType_value)
}

func init() { proto.RegisterFile("signature.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0xb1, 0x4e, 0xf3, 0x30,
	0x14, 0x85, 0x7f, 0xc7, 0xf9, 0x1b, 0x72, 0x83, 0x4a, 0xb9, 0x03, 0xb2, 0x98, 0xac, 0x4c, 0x56,
	0x54, 0x75, 0x28, 0x8f, 0xc0, 0x80, 0x18, 0x40, 0x95, 0x03, 0x0b, 0x9b, 0x13, 0x0c, 0x58, 0x2d,
	0x71, 0x14, 0xbb, 0x12, 0xe1, 0x35, 0x78, 0x12, 0xde, 0x10, 0x61, 0x9a, 0xb6, 0x52, 0xb6, 0x7b,
	0xcf, 0xb9, 0x3a, 0xe7, 0xb3, 0xe1, 0xcc, 0x99, 0xd7, 0x46, 0xf9, 0x6d, 0xa7, 0x17, 0x6d, 0x67,
	0xbd, 0xc5, 0x74, 0x2f, 0xe4, 0x5f, 0x04, 0x92, 0x52, 0xd7, 0xde, 0xd8, 0x06, 0x11, 0x62, 0x67,
	0x3e, 0x35, 0x23, 0x9c, 0x08, 0x2a, 0xc3, 0x8c, 0x73, 0x38, 0x6f, 0x55, 0xbf, 0xb1, 0xea, 0x79,
	0xd5, 0xe9, 0x17, 0xf3, 0x71, 0xa7, 0xdc, 0x9a, 0x45, 0x9c, 0x88, 0x54, 0x8e, 0x0d, 0xbc, 0x84,
	0x93, 0xfa, 0x4d, 0xd7, 0x6b, 0xb7, 0x7d, 0x67, 0x94, 0x13, 0x71, 0x2a, 0xf7, 0x3b, 0x16, 0x10,
	0xfb, 0xbe, 0xd5, 0x2c, 0xe6, 0x44, 0x4c, 0x97, 0x17, 0x8b, 0x03, 0xd4, 0xae, 0xff, 0xa1, 0x6f,
	0xb5, 0x0c, 0x37, 0xf9, 0x37, 0x81, 0xb4, 0x1c, 0x7c, 0x64, 0x90, 0x54, 0xa6, 0x29, 0x0f, 0x68,
	0xc3, 0x8a, 0x1c, 0xb2, 0xca, 0x34, 0xd7, 0x43, 0x65, 0x14, 0x2a, 0x8f, 0x25, 0x2c, 0x60, 0xe6,
	0xad, 0x57, 0x9b, 0x5d, 0x47, 0x08, 0xa1, 0x21, 0x64, 0xa4, 0xe3, 0x14, 0x22, 0xef, 0x02, 0x1f,
	0x95, 0x91, 0x77, 0x38, 0x87, 0xc4, 0xfd, 0xd9, 0xec, 0x3f, 0xa7, 0x22, 0x5b, 0xe2, 0x18, 0x5a,
	0x0e, 0x27, 0x45, 0x0e, 0xd9, 0xd1, 0x43, 0x30, 0x01, 0xfa, 0x74, 0xbb, 0x9a, 0xfd, 0x43, 0x80,
	0xc9, 0xcd, 0xe3, 0xfd, 0xef, 0x4c, 0xaa, 0x49, 0xf8, 0xff, 0xab, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x45, 0x16, 0x47, 0xb9, 0x92, 0x01, 0x00, 0x00,
}
